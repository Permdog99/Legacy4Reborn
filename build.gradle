import java.text.SimpleDateFormat

plugins {
    id "architectury-plugin" version "3.4+"
    id "dev.architectury.loom" version "1.6-SNAPSHOT" apply false
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings loom.officialMojangMappings()
    }
    repositories {
        maven { url "https://maven.neoforged.net/releases/" }
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    version = minecraft_version + "-" + mod_version
    group = rootProject.maven_group



    repositories {
        maven {
            url "https://jm.gserv.me/repository/maven-public/"
        }
        maven {
            url "https://maven.isxander.dev/releases"
        }
        maven {
            url "https://www.cursemaven.com"
        }

        exclusiveContent {
            forRepository {
                maven {
                    name = "Modrinth"
                    url = "https://api.modrinth.com/maven"
                }
            }
            filter {
                includeGroup "maven.modrinth"
            }
        }
        jcenter()
        maven { url "https://jitpack.io" }
    }
    java {

        withSourcesJar()

        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }
}
subprojects {
    processResources {
        def properties =[
                "version" : "${mod_version}",
                "mod_id" : "${mod_id}",
                "mod_name" : "${mod_name}",
                "mod_license" : "${mod_license}",
                "mod_description" : "${mod_description}",
                "mod_authors" : "${mod_authors}",
                "mod_credits" : "${mod_credits}",
                "mod_group" : project.group,
                "mod_source" : "${mod_source}",
                "mod_issues" : "${mod_issues}",
                "mc_version" : "${minecraft_version}"
        ]
        filesMatching(["META-INF/mods.toml","META-INF/neoforge.mods.toml","fabric.mod.json"]) {
            expand properties
        }
        inputs.properties(properties)
    }
}